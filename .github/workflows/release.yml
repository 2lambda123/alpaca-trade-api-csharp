name: Build and Release

on: [push]

jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Cache NuGet Packages
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Dotnet Build
      run: dotnet build -c Release
      
    - name: Pack Unity Binaries
      uses: thedoctor0/zip-release@master
      with:
        type: zip
        filename: UnityPackage.zip
        directory: Alpaca.Markets.Unity/bin/Release/netstandard2.0
        exclusions: |
          Alpaca.Markets.Unity.deps.json
          Alpaca.Markets.Unity.dll
          Alpaca.Markets.Unity.pdb

    - name: Save Unity Package
      uses: actions/upload-artifact@v2
      with:
        name: unity-package
        path: Alpaca.Markets.Unity/bin/Release/netstandard2.0/*.zip
          
    - name: Save SDK Packages
      uses: actions/upload-artifact@v2
      with:
        name: sdk-packages
        path: |
          Alpaca.Markets/bin/Release/*.nupkg
          Alpaca.Markets/bin/Release/*.snupkg
          
    - name: Save Extensions Packages
      uses: actions/upload-artifact@v2
      with:
        name: ext-packages
        path: |
          Alpaca.Markets.Extensions/bin/Release/*.nupkg
          Alpaca.Markets.Extensions/bin/Release/*.snupkg

  publish-sdk:
    name: Publish SDK Binaries
    runs-on: ubuntu-latest
    needs: build
    if: github.repository == 'alpacahq/alpaca-trade-api-csharp' && startsWith(github.ref, 'refs/tags/sdk')

    steps:
    - name: Load SDK Packages
      uses: actions/download-artifact@v2
      with:
        name: sdk-packages

    - name: Create NuGet Version
      run: dotnet nuget push **.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
        
    - name: Load Unity Package
      uses: actions/download-artifact@v2
      with:
        name: unity-package

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: SDK ${{ github.ref }}
        files: UnityPackage.zip
        draft: true

  publish-ext:
    name: Publish Extensions Binaries
    runs-on: ubuntu-latest
    needs: build
    if: github.repository == 'alpacahq/alpaca-trade-api-csharp' && startsWith(github.ref, 'refs/tags/ext')

    steps:
    - name: Load Extensions Packages
      uses: actions/download-artifact@v2
      with:
        name: ext-packages

    - name: Create NuGet Version
      run: dotnet nuget push **.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Extensions ${{ github.ref }}
        draft: true
