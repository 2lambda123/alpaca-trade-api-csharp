#nullable enable
Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions
Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions
Alpaca.Markets.Extensions.AlpacaDataClientExtensions
Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions
Alpaca.Markets.Extensions.AlpacaDataSubscriptionExtensions
Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions
Alpaca.Markets.Extensions.AlpacaStreamingClientExtensions
Alpaca.Markets.Extensions.AlpacaTradingClientExtensions
Alpaca.Markets.Extensions.AlpacaValueTask
Alpaca.Markets.Extensions.AlpacaValueTask.AlpacaValueTask() -> void
Alpaca.Markets.Extensions.AlpacaValueTask.Equals(Alpaca.Markets.Extensions.AlpacaValueTask other) -> bool
Alpaca.Markets.Extensions.AlpacaValueTask.GetAwaiter() -> System.Runtime.CompilerServices.ValueTaskAwaiter
Alpaca.Markets.Extensions.AlpacaValueTask.WithCancellation(System.Threading.CancellationToken cancellationToken) -> Alpaca.Markets.Extensions.AlpacaValueTask
Alpaca.Markets.Extensions.Bracket
Alpaca.Markets.Extensions.CalendarExtensions
Alpaca.Markets.Extensions.ConfigurationExtensions
Alpaca.Markets.Extensions.EnvironmentExtensions
Alpaca.Markets.Extensions.EnumerableExtensions
Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<TItem>
Alpaca.Markets.Extensions.OrderSideExtensions
Alpaca.Markets.Extensions.ReconnectionParameters
Alpaca.Markets.Extensions.ReconnectionParameters.MaxReconnectionAttempts.get -> int
Alpaca.Markets.Extensions.ReconnectionParameters.MaxReconnectionAttempts.set -> void
Alpaca.Markets.Extensions.ReconnectionParameters.MaxReconnectionDelay.get -> System.TimeSpan
Alpaca.Markets.Extensions.ReconnectionParameters.MaxReconnectionDelay.set -> void
Alpaca.Markets.Extensions.ReconnectionParameters.MinReconnectionDelay.get -> System.TimeSpan
Alpaca.Markets.Extensions.ReconnectionParameters.MinReconnectionDelay.set -> void
Alpaca.Markets.Extensions.ReconnectionParameters.ReconnectionParameters() -> void
Alpaca.Markets.Extensions.StreamingDataClientExtensions
override Alpaca.Markets.Extensions.AlpacaValueTask.Equals(object? obj) -> bool
override Alpaca.Markets.Extensions.AlpacaValueTask.GetHashCode() -> int
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetAverageDailyTradeVolumeAsync(this Alpaca.Markets.IAlpacaCryptoDataClient! client, string! symbol, Alpaca.Markets.IInclusiveTimeInterval! timeInterval) -> System.Threading.Tasks.Task<(decimal, uint)>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetAverageDailyTradeVolumeAsync(this Alpaca.Markets.IAlpacaCryptoDataClient! client, string! symbol, Alpaca.Markets.IInclusiveTimeInterval! timeInterval, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<(decimal, uint)>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetAverageDailyTradeVolumeAsync(this Alpaca.Markets.IAlpacaCryptoDataClient! client, string! symbol, System.DateTime from, System.DateTime into) -> System.Threading.Tasks.Task<(decimal, uint)>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetAverageDailyTradeVolumeAsync(this Alpaca.Markets.IAlpacaCryptoDataClient! client, string! symbol, System.DateTime from, System.DateTime into, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<(decimal, uint)>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalBarsAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoBarsRequest! request) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalBarsAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoBarsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalBarsDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoBarsRequest! request) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalBarsDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoBarsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalBarsMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoBarsRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IBar!>!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalBarsMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoBarsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IBar!>!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalBarsPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoBarsRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IBar!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalBarsPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoBarsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IBar!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalQuotesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoQuotesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IQuote!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalQuotesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoQuotesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IQuote!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalQuotesDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoQuotesRequest! request) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IQuote!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalQuotesDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoQuotesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IQuote!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalQuotesMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoQuotesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IQuote!>!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalQuotesMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoQuotesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IQuote!>!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalQuotesPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoQuotesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IQuote!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalQuotesPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoQuotesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IQuote!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalTradesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoTradesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.ITrade!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalTradesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoTradesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.ITrade!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalTradesDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoTradesRequest! request) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.ITrade!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalTradesDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoTradesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.ITrade!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalTradesMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoTradesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.ITrade!>!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalTradesMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoTradesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.ITrade!>!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalTradesPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoTradesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.ITrade!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetHistoricalTradesPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoTradesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.ITrade!>!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetSimpleMovingAverageAsync(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoBarsRequest! request, int window) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaCryptoDataClientExtensions.GetSimpleMovingAverageAsync(this Alpaca.Markets.IAlpacaCryptoDataClient! client, Alpaca.Markets.HistoricalCryptoBarsRequest! request, int window, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.GetDailyBarSubscription(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, params string![]! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.GetDailyBarSubscription(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.GetMinuteBarSubscription(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, params string![]! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.GetMinuteBarSubscription(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.GetQuoteSubscription(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, params string![]! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IQuote!>!
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.GetQuoteSubscription(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IQuote!>!
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.GetTradeSubscription(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, params string![]! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.ITrade!>!
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.GetTradeSubscription(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.ITrade!>!
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeDailyBarAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, params string![]! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeDailyBarAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, string! symbol) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeDailyBarAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeMinuteBarAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, params string![]! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeMinuteBarAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, string! symbol) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeMinuteBarAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeQuoteAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, params string![]! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IQuote!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeQuoteAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, string! symbol) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IQuote!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeQuoteAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IQuote!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeTradeAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, params string![]! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.ITrade!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeTradeAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, string! symbol) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.ITrade!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeTradeAsync(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.ITrade!>!>
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.WithReconnect(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client) -> Alpaca.Markets.IAlpacaCryptoStreamingClient!
static Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.WithReconnect(this Alpaca.Markets.IAlpacaCryptoStreamingClient! client, Alpaca.Markets.Extensions.ReconnectionParameters! parameters) -> Alpaca.Markets.IAlpacaCryptoStreamingClient!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetAverageDailyTradeVolumeAsync(this Alpaca.Markets.IAlpacaDataClient! client, string! symbol, Alpaca.Markets.IInclusiveTimeInterval! timeInterval) -> System.Threading.Tasks.Task<(decimal, uint)>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetAverageDailyTradeVolumeAsync(this Alpaca.Markets.IAlpacaDataClient! client, string! symbol, Alpaca.Markets.IInclusiveTimeInterval! timeInterval, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<(decimal, uint)>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetAverageDailyTradeVolumeAsync(this Alpaca.Markets.IAlpacaDataClient! client, string! symbol, System.DateTime from, System.DateTime into) -> System.Threading.Tasks.Task<(decimal, uint)>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetAverageDailyTradeVolumeAsync(this Alpaca.Markets.IAlpacaDataClient! client, string! symbol, System.DateTime from, System.DateTime into, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<(decimal, uint)>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalBarsAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalBarsRequest! request) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalBarsAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalBarsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalBarsDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalBarsRequest! request) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalBarsDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalBarsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalBarsMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalBarsRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IBar!>!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalBarsMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalBarsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IBar!>!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalBarsPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalBarsRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IBar!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalBarsPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalBarsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IBar!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalQuotesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalQuotesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IQuote!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalQuotesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalQuotesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IQuote!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalQuotesDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalQuotesRequest! request) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IQuote!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalQuotesDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalQuotesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IQuote!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalQuotesMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalQuotesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IQuote!>!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalQuotesMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalQuotesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IQuote!>!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalQuotesPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalQuotesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IQuote!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalQuotesPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalQuotesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.IQuote!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalTradesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalTradesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.ITrade!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalTradesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalTradesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.ITrade!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalTradesDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalTradesRequest! request) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.ITrade!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalTradesDictionaryOfAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalTradesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.ITrade!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalTradesMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalTradesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.ITrade!>!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalTradesMultiPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalTradesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyDictionary<string!, System.Collections.Generic.IReadOnlyList<Alpaca.Markets.ITrade!>!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalTradesPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalTradesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.ITrade!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalTradesPagesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalTradesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyList<Alpaca.Markets.ITrade!>!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetSimpleMovingAverageAsync(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalBarsRequest! request, int window) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetSimpleMovingAverageAsync(this Alpaca.Markets.IAlpacaDataClient! client, Alpaca.Markets.HistoricalBarsRequest! request, int window, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetDailyBarSubscription(this Alpaca.Markets.IAlpacaDataStreamingClient! client, params string![]! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetDailyBarSubscription(this Alpaca.Markets.IAlpacaDataStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetMinuteBarSubscription(this Alpaca.Markets.IAlpacaDataStreamingClient! client, params string![]! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetMinuteBarSubscription(this Alpaca.Markets.IAlpacaDataStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetQuoteSubscription(this Alpaca.Markets.IAlpacaDataStreamingClient! client, params string![]! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IQuote!>!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetQuoteSubscription(this Alpaca.Markets.IAlpacaDataStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.IQuote!>!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetTradeSubscription(this Alpaca.Markets.IAlpacaDataStreamingClient! client, params string![]! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.ITrade!>!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetTradeSubscription(this Alpaca.Markets.IAlpacaDataStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> Alpaca.Markets.IAlpacaDataSubscription<Alpaca.Markets.ITrade!>!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.WithReconnect(this Alpaca.Markets.IAlpacaDataStreamingClient! client) -> Alpaca.Markets.IAlpacaDataStreamingClient!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.WithReconnect(this Alpaca.Markets.IAlpacaDataStreamingClient! client, Alpaca.Markets.Extensions.ReconnectionParameters! parameters) -> Alpaca.Markets.IAlpacaDataStreamingClient!
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeDailyBarAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, params string![]! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeDailyBarAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, string! symbol) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeDailyBarAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeMinuteBarAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, params string![]! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeMinuteBarAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, string! symbol) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeMinuteBarAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IBar!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeQuoteAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, params string![]! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IQuote!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeQuoteAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, string! symbol) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IQuote!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeQuoteAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.IQuote!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeTradeAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, params string![]! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.ITrade!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeTradeAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, string! symbol) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.ITrade!>!>
static Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeTradeAsync(this Alpaca.Markets.IAlpacaDataStreamingClient! client, System.Collections.Generic.IEnumerable<string!>! symbols) -> System.Threading.Tasks.ValueTask<Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription<Alpaca.Markets.ITrade!>!>
static Alpaca.Markets.Extensions.AlpacaDataSubscriptionExtensions.AsAsyncEnumerable<TItem>(this Alpaca.Markets.IAlpacaDataSubscription<TItem>! subscription) -> System.Collections.Generic.IAsyncEnumerable<TItem>!
static Alpaca.Markets.Extensions.AlpacaDataSubscriptionExtensions.AsAsyncEnumerable<TItem>(this Alpaca.Markets.IAlpacaDataSubscription<TItem>! subscription, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<TItem>!
static Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.GetCalendarForSingleDayAsync(this Alpaca.Markets.IAlpacaTradingClient! client, System.DateTime date, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Alpaca.Markets.ICalendar?>!
static Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.ListAccountActivitiesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaTradingClient! client, Alpaca.Markets.AccountActivitiesRequest! request) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IAccountActivity!>!
static Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.ListAccountActivitiesAsAsyncEnumerable(this Alpaca.Markets.IAlpacaTradingClient! client, Alpaca.Markets.AccountActivitiesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IAccountActivity!>!
static Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaCryptoDataClient(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Alpaca.Markets.AlpacaCryptoDataClientConfiguration! configuration) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaCryptoDataClient(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Alpaca.Markets.IEnvironment! environment, Alpaca.Markets.SecurityKey! securityKey) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaDataClient(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Alpaca.Markets.AlpacaDataClientConfiguration! configuration) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaDataClient(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Alpaca.Markets.IEnvironment! environment, Alpaca.Markets.SecurityKey! securityKey) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaTradingClient(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Alpaca.Markets.AlpacaTradingClientConfiguration! configuration) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaTradingClient(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Alpaca.Markets.IEnvironment! environment, Alpaca.Markets.SecurityKey! securityKey) -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
static Alpaca.Markets.Extensions.AlpacaStreamingClientExtensions.WithReconnect(this Alpaca.Markets.IAlpacaStreamingClient! client) -> Alpaca.Markets.IAlpacaStreamingClient!
static Alpaca.Markets.Extensions.AlpacaStreamingClientExtensions.WithReconnect(this Alpaca.Markets.IAlpacaStreamingClient! client, Alpaca.Markets.Extensions.ReconnectionParameters! parameters) -> Alpaca.Markets.IAlpacaStreamingClient!
static Alpaca.Markets.Extensions.AlpacaValueTask.operator !=(Alpaca.Markets.Extensions.AlpacaValueTask lhs, Alpaca.Markets.Extensions.AlpacaValueTask rhs) -> bool
static Alpaca.Markets.Extensions.AlpacaValueTask.operator ==(Alpaca.Markets.Extensions.AlpacaValueTask lhs, Alpaca.Markets.Extensions.AlpacaValueTask rhs) -> bool
static Alpaca.Markets.Extensions.Bracket.Buy(string! symbol, long quantity, decimal takeProfitLimitPrice, decimal stopLossStopPrice) -> Alpaca.Markets.BracketOrder!
static Alpaca.Markets.Extensions.Bracket.Buy(string! symbol, long quantity, decimal takeProfitLimitPrice, decimal stopLossStopPrice, decimal stopLossLimitPrice) -> Alpaca.Markets.BracketOrder!
static Alpaca.Markets.Extensions.Bracket.Sell(string! symbol, long quantity, decimal takeProfitLimitPrice, decimal stopLossStopPrice) -> Alpaca.Markets.BracketOrder!
static Alpaca.Markets.Extensions.Bracket.Sell(string! symbol, long quantity, decimal takeProfitLimitPrice, decimal stopLossStopPrice, decimal stopLossLimitPrice) -> Alpaca.Markets.BracketOrder!
static Alpaca.Markets.Extensions.CalendarExtensions.AsExclusiveTimeIntervalUtc(this Alpaca.Markets.ICalendar! calendar) -> Alpaca.Markets.IExclusiveTimeInterval!
static Alpaca.Markets.Extensions.CalendarExtensions.AsInclusiveTimeIntervalUtc(this Alpaca.Markets.ICalendar! calendar) -> Alpaca.Markets.IInclusiveTimeInterval!
static Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(this Alpaca.Markets.AlpacaCryptoDataClientConfiguration! configuration) -> Alpaca.Markets.IAlpacaCryptoDataClient!
static Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(this Alpaca.Markets.AlpacaCryptoStreamingClientConfiguration! configuration) -> Alpaca.Markets.IAlpacaCryptoStreamingClient!
static Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(this Alpaca.Markets.AlpacaDataClientConfiguration! configuration) -> Alpaca.Markets.IAlpacaDataClient!
static Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(this Alpaca.Markets.AlpacaDataStreamingClientConfiguration! configuration) -> Alpaca.Markets.IAlpacaDataStreamingClient!
static Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(this Alpaca.Markets.AlpacaStreamingClientConfiguration! configuration) -> Alpaca.Markets.IAlpacaStreamingClient!
static Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(this Alpaca.Markets.AlpacaTradingClientConfiguration! configuration) -> Alpaca.Markets.IAlpacaTradingClient!
static Alpaca.Markets.Extensions.EnumerableExtensions.GetAverageDailyTradeVolume(this System.Collections.Generic.IEnumerable<Alpaca.Markets.IBar!>! bars) -> (decimal, uint)
static Alpaca.Markets.Extensions.EnumerableExtensions.GetAverageDailyTradeVolumeAsync(this System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>! bars) -> System.Threading.Tasks.Task<(decimal, uint)>!
static Alpaca.Markets.Extensions.EnumerableExtensions.GetAverageDailyTradeVolumeAsync(this System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>! bars, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<(decimal, uint)>!
static Alpaca.Markets.Extensions.EnumerableExtensions.GetSimpleMovingAverage(this System.Collections.Generic.IEnumerable<Alpaca.Markets.IBar!>! bars, int window) -> System.Collections.Generic.IEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.EnumerableExtensions.GetSimpleMovingAverageAsync(this System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>! bars, int window) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.EnumerableExtensions.GetSimpleMovingAverageAsync(this System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>! bars, int window, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<Alpaca.Markets.IBar!>!
static Alpaca.Markets.Extensions.EnvironmentExtensions.WithProxyForAlpacaDataStreamingClient(this Alpaca.Markets.IEnvironment! environment) -> Alpaca.Markets.IEnvironment!
static Alpaca.Markets.Extensions.EnvironmentExtensions.WithProxyForAlpacaDataStreamingClient(this Alpaca.Markets.IEnvironment! environment, System.Uri! alpacaProxyAgentUrl) -> Alpaca.Markets.IEnvironment!
static Alpaca.Markets.Extensions.OrderSideExtensions.Bracket(this Alpaca.Markets.OrderSide orderSide, string! symbol, long quantity, decimal takeProfitLimitPrice, decimal stopLossStopPrice) -> Alpaca.Markets.BracketOrder!
static Alpaca.Markets.Extensions.OrderSideExtensions.Bracket(this Alpaca.Markets.OrderSide orderSide, string! symbol, long quantity, decimal takeProfitLimitPrice, decimal stopLossStopPrice, decimal stopLossLimitPrice) -> Alpaca.Markets.BracketOrder!
static Alpaca.Markets.Extensions.ReconnectionParameters.Default.get -> Alpaca.Markets.Extensions.ReconnectionParameters!
static Alpaca.Markets.Extensions.StreamingDataClientExtensions.SubscribeAsync(this Alpaca.Markets.IStreamingDataClient! client, params Alpaca.Markets.IAlpacaDataSubscription![]! subscriptions) -> Alpaca.Markets.Extensions.AlpacaValueTask
static Alpaca.Markets.Extensions.StreamingDataClientExtensions.UnsubscribeAsync(this Alpaca.Markets.IStreamingDataClient! client, params Alpaca.Markets.IAlpacaDataSubscription![]! subscriptions) -> Alpaca.Markets.Extensions.AlpacaValueTask
